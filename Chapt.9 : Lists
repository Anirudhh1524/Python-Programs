What is a List in Python?
A list is an ordered, mutable collection that can hold a variety of data types. Think of it as a container for storing multiple items in a single variable.

Key Characteristics
•	Ordered: Items maintain the order in which they were added.
•	Mutable: You can change, add, or remove items.
•	Indexed: Access items using their position (starting from 0).
•	Allows duplicates: Same value can appear multiple times.
•	Mixed types: Can store integers, strings, booleans, even other lists.

Creating Lists	
# List of integers
numbers = [1, 2, 3, 4, 5]

# List of strings
fruits = ['apple', 'banana', 'cherry']

# Mixed data types
mixed = [1, 'hello', 3.14, True]

# Nested list
nested = [1, [2, 3], 4]


Common List Operations
# Accessing elements
print(fruits[0])       # 'apple'

# Modifying elements
fruits[1] = 'blueberry'

# Adding elements
fruits.append('date')  # Adds to end
fruits.insert(1, 'kiwi')  # Inserts at index 1

# Removing elements
fruits.remove('apple')  # Removes by value
del fruits[0]           # Removes by index
popped = fruits.pop()   # Removes last item

# Slicing
print(fruits[1:3])      # Sublist from index 1 to 2

# Length
print(len(fruits))      # Number of items

 
Useful Methods
 
Method	  Description
append()	Adds item to end
extend()	Adds multiple items
insert()	Inserts item at specific index
remove()	Removes first occurrence of item
pop()	    Removes and returns item
sort()	  Sorts list in place
reverse()	Reverses list
clear()	  Removes all items


