
while condition:

# code block
•	condition: A boolean expression. If True, the loop runs.
•	code block: Indented statements that execute each time the condition is true.
Example
i = 1
while i < 6:
    print(i)
    i += 1
This prints numbers from 1 to 5. The loop stops when i becomes 6.
Infinite Loop
If the condition never becomes false, the loop runs forever:
while True:
       print("This will run forever!")

Loop Control Statements
•	if: add condition in loop
•	break: Exits the loop early.
•	continue: Skips the current iteration and continues with the next.
•	else: Executes once when the loop condition becomes false (unless exited with break).
Example with break and else
i = 1
while i < 6:
    print(i)
    if i == 3:
        break
    i += 1
else:
    print("Loop ended naturally")



range, int & step statements
range()
The range() function generates a sequence of numbers. It's commonly used in for loops.
Syntax:
range(start, stop, step)
1.	start: The beginning of the sequence (default is 0).
2.	stop: The end of the sequence (exclusive).
3.	step: The increment (default is 1).
Examples:
range(5)           # 0, 1, 2, 3, 4
range(2, 6)        # 2, 3, 4, 5
range(1, 10, 2)    # 1, 3, 5, 7, 9
range(10, 0, -2)   # 10, 8, 6, 4, 2
Using range() in a loop
for i in range(1, 6):
    print(i)
This prints numbers from 1 to 5.
 int()
The int() function converts a value to an integer.
Examples:
int("42")      # 42
int(3.99)      # 3
int(True)      # 1
You might use int() when reading user input:
age = int(input("Enter your age: "))
step in range()
The step controls how the sequence progresses:
1.	Positive step → counts up
2.	Negative step → counts down
Example:
for i in range(10, 0, -1):
    print(i)

